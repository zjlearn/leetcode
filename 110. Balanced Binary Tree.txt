/*
110. Balanced Binary Tree
	递归判断子树是否平衡 
*/
public class Solution {
    public boolean isBalanced(TreeNode root) {
    	if(root==null) return true;
    	int lh=hight(root.left);
    	int rh=hight(root.right);
    	if(lh> rh+1) return false;
    	else if(lh+1 < rh) return false;
    	else
    		return isBalanced(root.left) && isBalanced(root.right);
    }
    
    private int max(int a, int b){
    	if(a>b) return a;
    	else return b;		
    }
    //返回以root为跟节点的树的最大高度
    private  int hight(TreeNode root){
    	if(root==null) return 0;
    	else if(root.left ==null && root.right==null) return 1;
    	else return max(hight(root.left), hight(root.right))+1;
    }
   
    public static void main(String[] args) {
    
	}
}