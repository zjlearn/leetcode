package leetcode;

import java.util.*;

/*
 * 125. Valid Palindrome
 * 只考虑字母， 数字字符，（忽略大小写） 判断是否是回文串
 * 方法： 只要前后两个指针，就可以了。 时间o(n). n为字符串长度 
 * 
 */
public class Solution {

		static HashSet<Character> alphanumeric= new HashSet<Character>();
		static{
			for(int i=0; i<26; i++)
				alphanumeric.add((char)('a'+i));
			for(int i=0; i<10; i++)
				alphanumeric.add((char)('0'+i));
		}
	
    public boolean isPalindrome(String s) {
        int index1=0; 
        int index2=s.length()-1;
        s=s.toLowerCase();
        while(index1<index2){
        	if( !alphanumeric.contains(s.charAt(index1))){
        		index1++; continue; }
        	else if( !alphanumeric.contains(s.charAt(index2))){
        		index2--; continue; }
        	if(s.charAt(index1)==s.charAt(index2)){
        		index1++; index2--;
        		continue;
        	}else{
        		return false;
        		}
        }
        return true;
    }
    public static void main(String[] args) {
		String s="a";
		System.out.println(new Solution().isPalindrome(s));
	}
}