
/*
 * 328. Odd Even Linked List
 * group all odd nodes together followed by the even nodes
 * The program should run in O(1) space complexity and O(nodes) time complexity.
 * and in place
 */
public class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head==null || head.next==null) return head;
        ListNode odd=head;
        ListNode odd_tail=head;
        ListNode even=head.next;
        ListNode even_tail=even;
        head=even.next;
        while(head != null){
        	odd_tail.next=head;
        	odd_tail=head;
        	head=head.next;
        	if(head==null) break;
        	even_tail.next=head;
        	even_tail=head;
        	head=head.next;
        }
        odd_tail.next=even;
        even_tail.next=null;
        return odd;
    }
    public static void main(String[] args) {
		/*int [] values= new int[]{1,2,3};
		ListNode head=ListFactory.newList(values);
		head=new Solution().oddEvenList(head);
		if(head==null)
			System.out.println("af");
		while( head != null){
			System.out.println(head.val);
			head=head.next;
		}*/
	}
}